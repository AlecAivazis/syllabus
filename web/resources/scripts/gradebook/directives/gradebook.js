// Generated by CoffeeScript 1.7.1
(function() {
  var _;

  _ = window._;

  angular.module('gradebook', []).directive('gradebook', [
    '$http', '$rootScope', function($http, $rootScope) {
      return {
        restrict: 'AE',
        templateUrl: '../templates/gradebook/gradebook.html',
        controller: 'gradebookCtrl'
      };
    }
  ]).controller('gradebookCtrl', [
    '$scope', '$http', '$rootScope', function($scope, $http, $rootScope) {
      $rootScope.$on('recalculateWeights', function() {
        return $scope.recalculateWeights();
      });
      $rootScope.$on('recalculateAverages', function() {
        return $scope.recalculateAverages();
      });
      $rootScope.$on('recalculateGrades', function() {
        return $scope.recalculateGrades();
      });
      $scope.updateEventCategory = function(eventId) {
        var event;
        event = _.where($scope.events, {
          id: eventId
        })[0];
        return $http.post('/gradebook/changeCategory/', {
          id: event.id,
          value: event.category
        }).success(function(result) {
          $scope.recalculateWeights();
          return $scope.recalculateGrades();
        });
      };
      $scope.updatePossiblePoints = function(eventId) {
        var event;
        event = _.where($scope.events, {
          id: eventId
        })[0];
        return $http.post('/gradebook/changePossiblePoints/', {
          id: event.id,
          value: event.possiblePoints
        }).success(function(result) {
          return $scope.recalculateGrades();
        });
      };
      $scope.updateGrade = function(studentId, eventId) {
        var grade;
        grade = $scope.gradebook[studentId][eventId].grade;
        return $http.post('/gradebook/addgrade/', {
          student: studentId,
          event: eventId,
          score: grade
        }).success(function(result) {
          $scope.recalculateGrades();
          return $scope.recalculateAverages();
        });
      };
      $scope.recalculateAverages = function() {
        var nStudents, total;
        nStudents = $scope.students.length;
        angular.forEach($scope.events, function(event) {
          var total;
          total = _.reduce($scope.students, function(memo, student) {
            return memo += $scope.gradebook[student.id][event.id].grade;
          }, 0);
          return event.average = total / nStudents;
        });
        total = _.reduce($scope.students, function(memo, student) {
          return memo += parseFloat(student.totalGrade.score);
        }, 0);
        return $scope.totalAverage = total / nStudents;
      };
      $scope.computeWeights = function() {
        var categories;
        categories = _.uniq(_.pluck($scope.events, 'category'));
        return angular.forEach(categories, function(category) {
          var totalPoints, weight, weightPerPoint;
          totalPoints = _.reduce(_.where($scope.events, {
            category: category
          }), function(memo, event) {
            return memo + parseInt(event.possiblePoints);
          }, 0);
          weight = _.where($scope.weights.categories, {
            category: category
          })[0].percentage;
          weightPerPoint = weight / totalPoints;
          return angular.forEach(_.where($scope.events, {
            category: category
          }), function(category) {
            return category.weight = Math.round(category.possiblePoints * weightPerPoint);
          });
        });
      };
      $scope.recalculateWeights = function() {
        if (!$scope.weights) {
          return $scope.loadWeights().success(function(result) {
            var refreshWeights;
            refreshWeights = false;
            return $scope.computeWeights();
          });
        } else {
          return $scope.computeWeights();
        }
      };
      $scope.computeGrades = function() {
        return angular.forEach($scope.students, function(student) {
          var letter, score, totalScore;
          totalScore = 0;
          angular.forEach($scope.events, function(event) {
            var grade;
            grade = $scope.gradebook[student.id][event.id].grade;
            return totalScore += parseFloat((grade / parseInt(event.possiblePoints)) * event.weight);
          });
          letter = _.sortBy(_.filter($scope.gradingScale.categories, function(category) {
            return category.lower < totalScore;
          }), function(num) {
            return num.lower;
          }).reverse()[0].value;
          score = totalScore.toFixed(1);
          return student.totalGrade = {
            letter: letter,
            score: score
          };
        });
      };
      return $scope.recalculateGrades = function() {
        if (!$scope.gradingScale) {
          return $http.get('/api/classes/' + $rootScope.gradebook_id + '/gradingScale/').success(function(result) {
            var refreshGradingScale;
            $scope.gradingScale = result;
            $scope.updateUppers();
            refreshGradingScale = false;
            return $scope.computeGrades();
          });
        } else {
          return $scope.computeGrades();
        }
      };
    }
  ]);

}).call(this);
